{"version":3,"file":"frc.js","sources":["../../../src/track.js","../../../src/album.js","../../../src/artist.js","../../../src/corpus.datasets.year.js","../../../src/corpus.datasets.departement.js","../../../src/corpus.search.js","../../../src/corpus.js","../../../src/corpus.utils.js"],"sourcesContent":["/**\n *\n * @class Track\n */\nexport class Track {\n\n  /**\n   *\n   * @param trackJSON\n   */\n  constructor(trackJSON) {\n\n    this.title = trackJSON.title;\n    this.fullTitle = trackJSON.fullTitle;\n    this.releaseDate = trackJSON.releaseDate;\n    this.releaseYear = trackJSON.releaseYear;\n    this.departmentNumber = trackJSON.departmentNumber;\n    this.departmentName = trackJSON.departmentName;\n    this.id = trackJSON.id;\n    this.url = trackJSON.url;\n    this.artistID = trackJSON.artistID;\n    this.artist = trackJSON.artist;\n    this.content = trackJSON.content;\n\n    if (trackJSON.content) {\n      this.components = trackJSON.content\n        .replace(/,/g, ' ')\n        .replace(/\\./g, ' ')\n        .replace(/\\n/g, ' ')\n        .replace(/\\(/g, ' ')\n        .replace(/\\)/g, ' ')\n        .replace(/\\[/g, ' ')\n        .replace(/]/g, ' ')\n        .split(\" \")\n        .filter((word) => word.length > 0);\n    } else if (trackJSON.components) {\n      this.components = trackJSON.components;\n    }\n\n    this.componentsLowercased = this.components.map(item => item.toLowerCase());\n\n    let typesSet = new Set(this.components);\n    this.types = Array.from(typesSet);\n  }\n}\n","import {Track} from \"./track\";\n\n/**\n *\n */\nexport class Album {\n\n  constructor(albumJSON) {\n    this.name = albumJSON.name;\n    this.tracks = [];\n    for (let i = 0; i < albumJSON.tracks.length; i++) {\n      const trackJSON = albumJSON.tracks[i];\n      const track = new Track(trackJSON);\n      track.departmentNumber = albumJSON.departmentNo;\n      track.departmentName = albumJSON.departmentName;\n      track.artistID = albumJSON.geniusId;\n      track.artist = albumJSON.name;\n      this.tracks.push(track);\n    }\n  }\n}\n","import { Album } from \"./album\";\nimport { Track } from \"./track\";\n\n/**\n *\n */\nexport class Artist {\n  constructor(rawJSON) {\n    this.name = rawJSON.name;\n    this.geniusId = rawJSON.geniusId;\n    this.sex = rawJSON.sex;\n    this.group = rawJSON.group;\n    this.department = rawJSON.department || rawJSON.departement;\n    this.departmentNo = rawJSON.departmentNo || rawJSON.departementNo;\n    this.departmentName = (rawJSON.department || rawJSON.departement)\n      .split(\"(\")[0]\n      .trim()\n      .toLowerCase();\n\n    this.albums = [];\n    for (let i = 0; i < rawJSON.albums.length; i++) {\n      const albumJSON = rawJSON.albums[i];\n      albumJSON.departmentNo = this.departmentNo;\n      albumJSON.departmentName = this.departmentName;\n      albumJSON.artistID = rawJSON.geniusId;\n      albumJSON.artist = rawJSON.name;\n      const album = new Album(albumJSON);\n      album.tracks.forEach((track) => (track.artistID = rawJSON.geniusId));\n      album.tracks.forEach((track) => (track.artist = rawJSON.name));\n      this.albums.push(album);\n    }\n\n    this.tracks = [];\n    for (let i = 0; i < rawJSON.tracks.length; i++) {\n      const trackJSON = rawJSON.tracks[i];\n      const track = new Track(trackJSON);\n      track.departmentNumber = this.departmentNo;\n      track.departmentName = this.departmentName;\n      track.artistID = rawJSON.geniusId;\n      track.artist = rawJSON.name;\n      this.tracks.push(track);\n    }\n  }\n\n  allTracks() {\n    let tracks = [];\n    for (let i = 0; i < this.albums.length; i++) {\n      const album = this.albums[i];\n      for (let i = 0; i < album.tracks.length; i++) {\n        tracks.push(album.tracks[i]);\n      }\n    }\n\n    for (let i = 0; i < this.tracks.length; i++) {\n      tracks.push(this.tracks[i]);\n    }\n    return tracks;\n  }\n\n  allWords() {\n    const allTracks = this.allTracks();\n    let allWords = [];\n    for (let i = 0; i < allTracks.length; i++) {\n      allWords.push(...allTracks[i].components);\n    }\n    return allWords;\n  }\n\n  hasTracks() {\n    return this.allTracks().length > 0;\n  }\n}\n","export function createYearData(collection, dateAccess, valueAccess) {\n  let data = [];\n  collection.forEach(function (item) {\n    let date = dateAccess(item);\n    let dataset = data.find(dataset => dataset.date === date);\n    if (dataset) {\n      dataset.value += valueAccess(item);\n    } else {\n      data.push({\n        date: date,\n        value: valueAccess(item)\n      });\n    }\n  });\n  return data;\n}\n\n/**\n * Return a year to.. collection.\n * @param tracks\n * @param countFunction\n * @returns {{}}\n */\nexport function getYearsToTracksCollection(tracks, countFunction) {\n  return createYearData(\n    tracks,\n    track => track.releaseYear,\n    countFunction);\n}\n\nexport function getYearsToCollectionRelative(data, tracksPerYear) {\n  data.forEach(function (item) {\n    let itemDate = item.date;\n    let tracksPerYearItem = tracksPerYear.find(item => item.date === itemDate);\n    if (!tracksPerYearItem) return;\n    item.value = item.value / tracksPerYearItem.value\n  })\n  return data;\n}\n","export function createDepartementData(tracksPerDepartement, collection, locationAccess, locationNameAccess, valueAccess) {\n  let departmentDatasets = [];\n\n  for (let i = 0; i < collection.length; i++) {\n    let item = collection[i];\n    let location = locationAccess(item);\n    let departmentName = locationNameAccess(item);\n    let dataset = departmentDatasets.find(dataset => dataset.location === location);\n    if (dataset) {\n      dataset.value += valueAccess(item);\n    } else {\n      departmentDatasets.push({\n        location: location,\n        locationName: departmentName,\n        value: valueAccess(item)\n      });\n    }\n  }\n\n  if (tracksPerDepartement) {\n    for (let departementIndex = 0; departementIndex < tracksPerDepartement.length; departementIndex++) {\n      let departmentObject = tracksPerDepartement[departementIndex];\n      let location = departmentObject.location;\n      if (departmentDatasets.find(item => item.location === location)) continue;\n      departmentDatasets.push({\n        value: 0,\n        location: location,\n        locationTotal: departmentObject.value,\n      });\n    }\n  }\n\n  return departmentDatasets;\n}\n\nexport function getDepartmentsToTracksCollection(tracksPerDepartement, tracks, countFunction) {\n  return createDepartementData(\n    tracksPerDepartement,\n    tracks,\n    track => track.departmentNumber,\n    track => track.departmentName,\n    countFunction);\n}\n\nexport function getDepartmentsToTracksCollectionRelative(data, tracksPerDepartement) {\n  data.forEach(function (item) {\n    let itemLocation = item.location;\n    let tracksPerDepartementItem = tracksPerDepartement.find(item => item.location === itemLocation);\n    if (!tracksPerDepartementItem) return;\n    item.value = item.value / tracksPerDepartementItem.value;\n  });\n  return data;\n}\n\nexport function getDepartmentsToArtistsCollection(tracksPerDepartement, artists, countFunction) {\n  return createDepartementData(\n    tracksPerDepartement,\n    artists,\n    artist => artist.departmentNo,\n    artist => artist.departmentName,\n    artist => 1\n  );\n}\n","import {Track} from \"./track\";\n\n/**\n *\n * @param corpus\n * @param searchQuery\n * @param firstYear\n * @param lastYear\n * @param sensitivity\n * @param absolute\n * @returns {[]}\n */\nexport function internalSearch(corpus, searchQuery, firstYear, lastYear, sensitivity, absolute) {\n  let theFirstYear = firstYear || corpus.getEarliestYear();\n  let theLastYear = lastYear || corpus.getLatestYear();\n  let theSensitivity = sensitivity || 'case-insensitive';\n  let theAbsolute = absolute || 'relative';\n\n  // clean search query\n  let groups = searchQuery.split(';').map(value => value.trim());\n  groups = groups.map(group => group.split(',').map(word => word.trim()).join(','));\n  groups = groups.map(group => group.trim());\n\n  let datasets = [];\n  let tracksObject = {};\n  for (let i = 0; i < groups.length; i++) {\n\n    let group = groups[i];\n    let words = group.split(',').map(value => value.trim());\n    let stack = words.join(\", \");\n\n    for (let j = 0; j < words.length; j++) {\n      let searchWord = words[j];\n      let dataset = datasetFor(\n        corpus,\n        searchWord,\n        stack,\n        theFirstYear,\n        theLastYear,\n        theSensitivity,\n        theAbsolute\n      );\n\n      tracksObject[searchWord] = dataset.tracks;\n      dataset.tracks = null;\n      datasets.push(dataset);\n    }\n  }\n  datasets.tracks = tracksObject;\n  return datasets;\n}\n\n/**\n *\n * @param corpus\n * @param searchText\n * @param stack\n * @param firstYear\n * @param lastYear\n * @param sensitivity\n * @param absolute\n * @returns {{stack: *, data: *[], label}}\n */\nfunction datasetFor(corpus, searchText, stack, firstYear, lastYear, sensitivity, absolute) {\n  let tracks = tracksForWord(corpus, searchText, sensitivity);\n  tracks = tracks.filter(function (track) {\n    return track.releaseYear >= firstYear\n      && track.releaseYear <= lastYear;\n  });\n\n  let chartData = createYearAndDepartmentsDataForTracks(\n    corpus,\n    tracks,\n    firstYear,\n    lastYear,\n    sensitivity,\n    absolute\n  );\n\n  return {\n    label: searchText,\n    stack: stack || searchText,\n    tracks: tracks,\n    data: chartData\n  };\n}\n\n/**\n * Returns an array containing all tracks which contains the given word.\n *\n * @param corpus\n * @param word\n * @param sensitivity\n * @returns {[]}\n */\nexport function tracksForWord(corpus, word, sensitivity = 'case-sensitive') {\n  let tracks = [];\n  const allTracks = corpus.allTracks();\n\n  if (sensitivity === 'case-sensitive') {\n    for (let i = 0; i < allTracks.length; i++) {\n      if (allTracks[i].components.indexOf(word) !== -1) {\n        tracks.push(new Track(allTracks[i]));\n      }\n    }\n  } else if (sensitivity === 'case-insensitive') {\n    word = word.toLowerCase();\n    for (let i = 0; i < allTracks.length; i++) {\n      if (allTracks[i].componentsLowercased.indexOf(word) !== -1) {\n        tracks.push(new Track(allTracks[i]));\n      }\n    }\n  }\n\n  return tracks;\n}\n\n\n/**\n *\n * @param corpus\n * @param tracks\n * @param firstYear\n * @param lastYear\n * @param sensitivity\n * @param absolute\n * @returns {[]}\n */\nexport function createYearAndDepartmentsDataForTracks(corpus, tracks, firstYear, lastYear, sensitivity, absolute) {\n  let items = [];\n\n  let yearsToTrackNumbers = corpus.getYearsToTrackNumbers();\n  let tracksPerDepartement = corpus.getDepartmentsToTracks();\n\n  let theFirstYear = firstYear || corpus.getEarliestYear();\n  let theLastYear = lastYear || corpus.getLatestYear();\n  let isAbsolute = absolute === 'absolute';\n\n  for (let index = 0; index < tracks.length; index++) {\n\n    let track = tracks[index];\n    let year = track.releaseYear;\n    let yearTotal = yearsToTrackNumbers.find(item => item.date === year).value;\n    let department = track.departmentNumber;\n    let departmentTotal = tracksPerDepartement.find(entry => entry.location === department).value;\n\n    let entry = items.find(function (item) {\n      return item.location === department && item.date === year;\n    });\n\n    if (entry) {\n      entry.value += 1;\n    } else {\n\n      let relative = 1 / yearTotal;\n      items.push({\n        location: department,\n        date: year,\n        value: 1,\n        relativeValue: relative,\n        dateTotal: yearTotal,\n        locationTotal: departmentTotal,\n      });\n    }\n\n    for (let year = theFirstYear; year <= theLastYear; year++) {\n      if (items.find(item => item.date === theLastYear)) continue;\n      items.push({\n        date: year,\n        value: 0,\n        dateTotal: yearTotal\n      });\n    }\n  }\n\n  if (!isAbsolute) {\n    for (let index = 0; index < items.length; index++) {\n      let item = items[index];\n      item.value = item.value / item.dateTotal;\n    }\n  }\n\n  for (let departementIndex = 0; departementIndex < tracksPerDepartement.length; departementIndex++) {\n    let departmentObject = tracksPerDepartement[departementIndex];\n    let location = departmentObject.location;\n    if (items.find(item => item.location === location)) continue;\n    items.push({\n      value: 0,\n      location: location,\n      locationTotal: departmentObject.value,\n    });\n  }\n\n  return items;\n}\n","import { Artist } from \"./artist\";\nimport {\n  getYearsToCollectionRelative,\n  getYearsToTracksCollection,\n} from \"./corpus.datasets.year\";\nimport {\n  getDepartmentsToTracksCollection,\n  getDepartmentsToArtistsCollection,\n  getDepartmentsToTracksCollectionRelative,\n} from \"./corpus.datasets.departement\";\nimport { internalSearch } from \"./corpus.search\";\n\n/**\n *\n * @class Corpus\n */\nexport class Corpus {\n  /**\n   * Creates a new instance of Corpus.\n   *\n   * @param parsedCorpus\n   */\n  constructor(parsedCorpus) {\n    this.artists = [];\n    this.artistsWithoutTracks = [];\n    this.initialize(parsedCorpus);\n  }\n\n  /**\n   *\n   * @param parsedCorpus\n   */\n  initialize(parsedCorpus) {\n    console.log(`[FRC] Parse corpus`);\n    for (let i = 0; i < parsedCorpus.length; i++) {\n      const artistJSON = parsedCorpus[i];\n      const artist = new Artist(artistJSON);\n      if (artist.hasTracks()) {\n        this.artists.push(artist);\n      } else {\n        this.artistsWithoutTracks.push(artist);\n      }\n    }\n    console.log(`[FRC] Found ${this.artists.length} artists`);\n  }\n\n  /**\n   * Returns an array containing all female artists.\n   *\n   * @returns {*[]}\n   */\n  femaleArtists() {\n    return this.artists.filter((artist) => artist.sex === \"F\");\n  }\n\n  /**\n   * Returns an array containing all male artists.\n   *\n   * @returns {*[]}\n   */\n  maleArtists() {\n    return this.artists.filter((artist) => artist.sex === \"M\");\n  }\n\n  /**\n   * Returns an array containing all group artists.\n   *\n   * @returns {*[]}\n   */\n  groupArtists() {\n    return this.artists.filter((artist) => artist.group === \"G\");\n  }\n\n  /**\n   * Returns an array with all tracks of the corpus.\n   *\n   * @returns {[]}\n   */\n  allTracks() {\n    let allTracks = [];\n    for (let i = 0; i < this.artists.length; i++) {\n      let artistTracks = this.artists[i].allTracks();\n      for (let i = 0; i < artistTracks.length; i++) {\n        allTracks.push(artistTracks[i]);\n      }\n    }\n    return allTracks;\n  }\n\n  /**\n   * Returns an array of all words in the corpus.\n   *\n   * @returns {[]}\n   */\n  allWords() {\n    let allWords = [];\n    for (let i = 0; i < this.artists.length; i++) {\n      let wordsOfArtist = this.artists[i].allWords();\n      for (let i = 0; i < wordsOfArtist.length; i++) {\n        allWords.push(wordsOfArtist[i]);\n      }\n    }\n    return allWords;\n  }\n\n  /**\n   * Returns an array containing all albums in the corpus.\n   *\n   * @returns {[]}\n   */\n  allAlbums() {\n    let allAlbums = [];\n    for (let i = 0; i < this.artists.length; i++) {\n      allAlbums.push(...this.artists[i].albums);\n    }\n    return allAlbums;\n  }\n\n  /**\n   * Returns an array containing all tracks without an album.\n   * @returns {[]}\n   */\n  allTracksWithoutAlbum() {\n    let tracksWithoutAlbum = [];\n    for (let i = 0; i < this.artists.length; i++) {\n      tracksWithoutAlbum.push(...this.artists[i].tracks);\n    }\n    return tracksWithoutAlbum;\n  }\n\n  /**\n   * Returns the earliest year in the corpus.\n   * @returns {*}\n   */\n  getEarliestYear() {\n    let allTracks = this.allTracks();\n    let firstYear = allTracks.find((item) => item !== undefined).releaseYear;\n    return this.allTracks().reduce(\n      (current, next) =>\n        current < next.releaseYear ? current : next.releaseYear,\n      firstYear\n    );\n  }\n\n  /**\n   * Returns the latest year of the corpus.\n   * @returns {*}\n   */\n  getLatestYear() {\n    let allTracks = this.allTracks();\n    let lastYear = allTracks.find((item) => item !== undefined).releaseYear;\n    return this.allTracks().reduce(\n      (current, next) =>\n        current > next.releaseYear ? current : next.releaseYear,\n      lastYear\n    );\n  }\n\n  getDateLabels() {\n    let firstDate = this.firstYear || this.getEarliestYear();\n    let lastDate = this.lastYear || this.getLatestYear();\n    let range = lastDate - firstDate + 1;\n    return Array(range)\n      .fill(0)\n      .map((e, i) => i + firstDate);\n  }\n\n  getLocations() {\n    return Array.from(\n      new Set(this.artists.map((artist) => artist.departmentNo))\n    );\n  }\n\n  getLocationNames() {\n    return Array.from(\n      new Set(this.artists.map((artist) => artist.departmentName))\n    );\n  }\n\n  /**\n   * Returns a year to track collection.\n   *\n   * @returns {{}}\n   */\n  getYearsToTrackNumbers() {\n    return getYearsToTracksCollection(this.allTracks(), () => 1);\n  }\n\n  /**\n   * Returns a year to word collection.\n   * @returns {{}}\n   */\n  getYearsToWords() {\n    return getYearsToTracksCollection(\n      this.allTracks(),\n      (track) => track.components.length\n    );\n  }\n\n  /**\n   * Returns a year to words collection with relative values.\n   * @returns {{}}\n   */\n  getYearsToWordsRelative() {\n    return getYearsToCollectionRelative(\n      this.getYearsToWords(),\n      this.getYearsToTrackNumbers()\n    );\n  }\n\n  /**\n   * Returns a year to types collection.\n   *\n   * @returns {{}}\n   */\n  getYearsToTypes() {\n    return getYearsToTracksCollection(\n      this.allTracks(),\n      (track) => track.types.length\n    );\n  }\n\n  /**\n   * Returns a year to types collection with relative values.\n   * @returns {{}}\n   */\n  getYearsToTypesRelative() {\n    return getYearsToCollectionRelative(\n      this.getYearsToTypes(),\n      this.getYearsToTrackNumbers()\n    );\n  }\n\n  getDepartmentsToArtists() {\n    return getDepartmentsToArtistsCollection(\n      this.getDepartmentsToTracks(),\n      this.artists,\n      () => 1\n    );\n  }\n\n  getDepartmentsToMaleArtists() {\n    return getDepartmentsToArtistsCollection(\n      this.getDepartmentsToTracks(),\n      this.maleArtists(),\n      () => 1\n    );\n  }\n\n  getDepartmentsToFemaleArtists() {\n    return getDepartmentsToArtistsCollection(\n      this.getDepartmentsToTracks(),\n      this.femaleArtists(),\n      () => 1\n    );\n  }\n\n  getDepartmentsToGroupArtists() {\n    return getDepartmentsToArtistsCollection(\n      this.getDepartmentsToTracks(),\n      this.groupArtists(),\n      () => 1\n    );\n  }\n\n  /**\n   * Returns a departments to year collection.\n   *\n   * @returns {{}}\n   */\n  getDepartmentsToTracks() {\n    return getDepartmentsToTracksCollection(null, this.allTracks(), () => 1);\n  }\n\n  /**\n   * Returns a departmen to word collection.\n   *\n   * @returns {{}}\n   */\n  getDepartmentsToWords() {\n    return getDepartmentsToTracksCollection(\n      this.getDepartmentsToTracks(),\n      this.allTracks(),\n      (track) => track.components.length\n    );\n  }\n\n  /**\n   * Returns a year to words collection.\n   *\n   * @returns {{}}\n   */\n  getDepartmentsToWordsRelative() {\n    return getDepartmentsToTracksCollectionRelative(\n      this.getDepartmentsToWords(),\n      this.getDepartmentsToTracks()\n    );\n  }\n\n  /**\n   * Returns a year to types collection.\n   *\n   * @returns {{}}\n   */\n  getDepartmentsToTypes() {\n    return getDepartmentsToTracksCollection(\n      this.getDepartmentsToTracks(),\n      this.allTracks(),\n      (track) => track.types.length\n    );\n  }\n\n  /**\n   * Returns a year to types collection.\n   *\n   * @returns {{}}\n   */\n  getDepartmentsToTypesRelative() {\n    return getDepartmentsToTracksCollectionRelative(\n      this.getDepartmentsToTypes(),\n      this.getDepartmentsToTracks()\n    );\n  }\n\n  /**\n   *\n   * @param years\n   * @returns {*}\n   */\n  getTracksForYears(years) {\n    return this.allTracks().filter((track) =>\n      years.includes(track.releaseYear)\n    );\n  }\n\n  getTracks(firstYear, lastYear) {\n    return this.allTracks().filter(\n      (track) => track.releaseYear >= firstYear && track.releaseYear <= lastYear\n    );\n  }\n\n  getTracksForYearAndDepartement(year, departmentNumber) {\n    return this.allTracks().filter(\n      (track) =>\n        track.releaseYear === year &&\n        track.departmentNumber === departmentNumber\n    );\n  }\n\n  tracksForLocations(departmentNumbers) {\n    this.allTracks().filter((track) =>\n      departmentNumbers.includes(track.departmentNumber)\n    );\n  }\n\n  artistsForLocations(departmentNumbers) {\n    return this.artists.filter((artist) =>\n      departmentNumbers.includes(String(artist.departmentNo))\n    );\n  }\n\n  /**\n   *\n   * @param searchQuery\n   * @param firstYear\n   * @param lastYear\n   * @param sensitivity\n   * @param absolute\n   * @returns {*[]}\n   */\n  search(searchQuery, firstYear, lastYear, sensitivity, absolute) {\n    return internalSearch(\n      this,\n      searchQuery,\n      firstYear,\n      lastYear,\n      sensitivity,\n      absolute\n    );\n  }\n}\n","import { Corpus } from \"./corpus\";\n\nCorpus.prototype.combineData = function (data) {\n  let combined = [];\n  data.forEach(function (item) {\n    let candidate = combined.find(\n      (dataset) =>\n        dataset.location === item.location && dataset.date === item.date\n    );\n    if (candidate) {\n      candidate.value += item.value;\n    } else {\n      combined.push({\n        date: item.date,\n        location: item.location,\n        value: item.value,\n      });\n    }\n  });\n  return combined;\n};\n\nCorpus.prototype.artistsToDatasets = function (artists) {\n  let datasets = [];\n  for (let index = 0; index < artists.length; index++) {\n    let artist = artists[index];\n    let tracks = artist.allTracks();\n    let data = [];\n    for (let trackIndex = 0; trackIndex < tracks.length; trackIndex++) {\n      let track = tracks[trackIndex];\n      data.push({\n        date: track.releaseYear,\n        location: artist.departmentNo,\n        value: 1,\n      });\n    }\n    datasets.push({\n      label: artist.name,\n      stack: artist.name,\n      data: data,\n    });\n  }\n  return datasets;\n};\n"],"names":[],"mappings":"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"}