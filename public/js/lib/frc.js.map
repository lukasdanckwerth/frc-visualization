{"version":3,"file":"frc.js","sources":["../../../src/parse.artists.js","../../../src/parse.tacks.js","../../../src/corpus.search.js","../../../src/corpus.js","../../../src/artists.to.data.js"],"sourcesContent":["export function parseArtists(json) {\n  console.log(`[FRC] Parse artists`);\n  let artists = [],\n    artist;\n  for (let i = 0; i < json.length; i++) {\n    artist = json[i];\n    Object.assign(artist, {\n      allTracks: function () {\n        let tracks = this.tracks.map((t) => t);\n        this.albums.forEach((album) => tracks.push(...album.tracks));\n        return tracks;\n      },\n      hasTracks: function () {\n        return this.allTracks().length > 0;\n      },\n    });\n\n    artist.departementNo = \"\" + (artist.departementNo || artist.departementNo);\n    artist.departementName = artist.departementName || artist.departement;\n\n    if (artist.hasTracks()) artists.push(artist);\n  }\n  return artists;\n}\n","export function parseTracks(json) {\n  console.log(`[FRC] Parse tracks`);\n  let data = [],\n    ids = [];\n  let artist, album, track, entry;\n  for (let i = 0; i < json.length; i++) {\n    artist = json[i];\n\n    if (!(artist.departementName || artist.departement)) {\n      console.log(artist);\n      throw Error(\"missing departement name\");\n    }\n\n    for (let i = 0; i < artist.albums.length; i++) {\n      album = artist.albums[i];\n      for (let j = 0; j < album.tracks.length; j++) {\n        track = album.tracks[j];\n        if (ids.includes(track.id)) continue;\n        ids.push(track.id);\n        data.push(parseTrack(track, artist, album.name));\n      }\n\n      for (let i = 0; i < artist.tracks.length; i++) {\n        track = artist.tracks[i];\n        if (ids.includes(track.id)) continue;\n        ids.push(track.id);\n        data.push(parseTrack(track, artist, undefined));\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction parseTrack(track, artist, album) {\n  if (!track) {\n    console.log(\"track\", track);\n    console.log(\"artist\", artist);\n    console.log(\"album\", album);\n    throw Error(\"no track\");\n  }\n  let content = track.content;\n  let components = content\n    .replace(/,/g, \" \")\n    .replace(/\\./g, \" \")\n    .replace(/\\n/g, \" \")\n    .replace(/\\(/g, \" \")\n    .replace(/\\)/g, \" \")\n    .replace(/\\[/g, \" \")\n    .replace(/]/g, \" \")\n    .split(\" \")\n    .filter((word) => word.length > 0);\n\n  let componentsLowercased = components.map((item) => item.toLowerCase());\n  let types = Array.from(new Set(components));\n\n  return {\n    artist: artist.name,\n    artistID: artist.geniusId,\n    album: album,\n    departementNo: \"\" + (artist.departementNo || artist.departementNo),\n    departementName: artist.departementName || artist.departement,\n    title: track.title,\n    fullTitle: track.fullTitle,\n    releaseDate: track.releaseDate,\n    releaseYear: track.releaseYear,\n    id: track.id,\n    url: track.url,\n    content: content,\n    components: components,\n    componentsLowercased: componentsLowercased,\n    types: types,\n  };\n}\n","export const SEARCH_TYPES = {\n  sensitive: \"case-sensitive\",\n  insensitve: \"case-insensitive\",\n  regex: \"regex\",\n};\n\nexport const SEARCH_COUNT = {\n  tracks: \"tracks\",\n  tracksRelativeDate: \"tracks-relative-date\",\n  tracksRelativeLocation: \"tracks-relative-location\",\n  words: \"words\",\n  wordsRelativeDate: \"words-relative-date\",\n  wordsRelativeLocation: \"words-relative-location\",\n};\n\nfunction count(array, element) {\n  let count = 0;\n  for (let i = 0; i < array.length; i++) if (array[i] == element) count++;\n  return count;\n}\n\nexport function internalSearch(\n  corpus,\n  query,\n  sensitivity,\n  searchCount,\n  firstYear,\n  lastYear\n) {\n  let tracks = corpus.tracks;\n  let artists = corpus.artists;\n  sensitivity = sensitivity || SEARCH_TYPES.insensitve;\n  searchCount = searchCount || SEARCH_COUNT.tracks;\n\n  function findTracks(accessor) {\n    return tracks.filter(accessor);\n  }\n\n  function tracksForWord(word) {\n    switch (sensitivity) {\n      case SEARCH_TYPES.sensitive:\n        return findTracks((t) => t.components.indexOf(word) !== -1);\n      case SEARCH_TYPES.insensitve:\n        let lower = word.toLowerCase();\n        return findTracks((t) => t.componentsLowercased.indexOf(lower) !== -1);\n      case SEARCH_TYPES.regex:\n        let re = new RegExp(word),\n          results;\n        return findTracks((t) => {\n          results = t.content.match(re);\n          return results && results.length > 0;\n        });\n      default:\n        throw new Error(\"unknown sensitivity: \" + sensitivity);\n    }\n  }\n\n  function data(tracks, label) {\n    let data = [],\n      value = 0;\n    for (let t, candidate, i = 0; i < tracks.length; i++) {\n      t = tracks[i];\n      if (!t) throw new Error(\"track invalid: \" + i);\n      if (!t.departementNo) throw new Error(\"no departement no: \" + i);\n      if (!t.releaseYear) throw new Error(\"no release year: \" + i);\n\n      switch (searchCount) {\n        case SEARCH_COUNT.tracks:\n          value = 1;\n          break;\n        case SEARCH_COUNT.words:\n          value = count(t.components, label);\n          break;\n        case SEARCH_COUNT.tracksRelativeDate:\n          value = 1 / corpus.datesToTracks.get(t.releaseYear);\n          break;\n        case SEARCH_COUNT.tracksRelativeLocation:\n          value = 1 / corpus.locationsToTracks.get(t.departementNo);\n          break;\n        case SEARCH_COUNT.wordsRelativeDate:\n          value =\n            count(t.components, label) / corpus.datesToWords.get(t.releaseYear);\n          break;\n        case SEARCH_COUNT.wordsRelativeLocation:\n          value =\n            count(t.components, label) /\n            corpus.locationsToWords.get(t.departementNo);\n          break;\n        default:\n          throw new Error(\"unknown search type: \" + searchCount);\n      }\n\n      candidate = data.find(\n        (d) => d.date === t.releaseYear && d.location === t.departementNo\n      );\n\n      if (candidate) {\n        candidate.value += value;\n      } else {\n        data.push({\n          date: t.releaseYear,\n          location: t.departementNo,\n          value: value,\n        });\n      }\n    }\n\n    return data;\n  }\n\n  function searchStack(stack) {\n    let labels = stack.split(\",\").map((l) => l.trim());\n    let datasets = [];\n\n    for (let i = 0; i < labels.length; i++) {\n      let label = labels[i];\n      let tracks = tracksForWord(label);\n      datasets.push({ label, stack, data: data(tracks, label), tracks });\n    }\n\n    return datasets;\n  }\n\n  let stacks = query.split(\";\").map((value) => value.trim());\n  let datasets = stacks.map((stack) => searchStack(stack)).flat();\n\n  datasets.forEach((d) => {\n    d.data = d.data.filter((d) => d.date >= firstYear && d.date <= lastYear);\n  });\n\n  return datasets;\n}\n","import { parseArtists } from \"./parse.artists.js\";\nimport { parseTracks } from \"./parse.tacks.js\";\nimport { internalSearch } from \"./corpus.search\";\n\nfunction ArraySet(input) {\n  return Array.from(new Set(input));\n}\n\nfunction load_d3() {\n  return typeof window === \"undefined\" ? require(\"d3\") : d3 || window.d3;\n}\n\nexport class Corpus {\n  constructor(json) {\n    this.artists = parseArtists(json);\n    this.tracks = parseTracks(json);\n    console.log(`[FRC] Found ${this.artists.length} artists`);\n    console.log(`[FRC] Found ${this.tracks.length} tracks`);\n\n    let d3 = load_d3();\n\n    this.datesToTracks = d3.rollup(\n      this.tracks,\n      (v) => v.length,\n      (d) => d.releaseYear\n    );\n\n    this.datesToWords = d3.rollup(\n      this.tracks,\n      (v) => d3.sum(v, (d) => d.components.length),\n      (d) => d.releaseYear\n    );\n\n    this.locationsToTracks = d3.rollup(\n      this.tracks,\n      (v) => v.length,\n      (d) => d.departementNo\n    );\n\n    this.locationsToWords = d3.rollup(\n      this.tracks,\n      (v) => d3.sum(v, (d) => d.components.length),\n      (d) => d.departementNo\n    );\n  }\n\n  dates() {\n    return Array.from(this.datesToTracks.keys());\n  }\n\n  locations() {\n    return Array.from(this.locationsToTracks.keys());\n  }\n\n  locationNames() {\n    return ArraySet(this.artists.map((a) => a.departementName));\n  }\n\n  tracksForLocationsAndDates(locations, dates) {\n    return this.tracks.filter(\n      (t) =>\n        locations.includes(\"\" + t.departementNo) &&\n        dates.includes(t.releaseYear)\n    );\n  }\n\n  tracksForLocations(locations) {\n    return this.tracks.filter((t) => locations.includes(\"\" + t.departementNo));\n  }\n\n  tracksForDates(dates) {\n    return this.tracks.filter((t) => dates.includes(t.releaseYear));\n  }\n\n  artistsForLocations(locations) {\n    return this.artists.filter((a) => locations.includes(\"\" + a.departementNo));\n  }\n\n  search(searchQuery, firstYear, lastYear, sensitivity, absolute) {\n    return internalSearch(\n      this,\n      searchQuery,\n      sensitivity,\n      absolute,\n      firstYear,\n      lastYear\n    );\n  }\n}\n","export function artistsToDatasets(artists) {\n  return artists.map((a) => {\n    return {\n      label: a.name,\n      data: a.allTracks().map((t) => {\n        return {\n          location: a.departementNo,\n          date: t.releaseYear,\n          value: 1,\n        };\n      }),\n    };\n  });\n}\n"],"names":[],"mappings":";;;;;;;;;EAAO,SAAS,YAAY,CAAC,IAAI,EAAE;EACnC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;EACrC,EAAE,IAAI,OAAO,GAAG,EAAE;EAClB,IAAI,MAAM,CAAC;EACX,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACxC,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;EAC1B,MAAM,SAAS,EAAE,YAAY;EAC7B,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;EACrE,QAAQ,OAAO,MAAM,CAAC;EACtB,OAAO;EACP,MAAM,SAAS,EAAE,YAAY;EAC7B,QAAQ,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;EAC3C,OAAO;EACP,KAAK,CAAC,CAAC;AACP;EACA,IAAI,MAAM,CAAC,aAAa,GAAG,EAAE,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC;EAC/E,IAAI,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,WAAW,CAAC;AAC1E;EACA,IAAI,IAAI,MAAM,CAAC,SAAS,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EACjD,GAAG;EACH,EAAE,OAAO,OAAO,CAAC;EACjB;;ECvBO,SAAS,WAAW,CAAC,IAAI,EAAE;EAClC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;EACpC,EAAE,IAAI,IAAI,GAAG,EAAE;EACf,IAAI,GAAG,GAAG,EAAE,CAAC;EACb,EAAK,IAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAQ;EAClC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACxC,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,IAAI,IAAI,EAAE,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE;EACzD,MAAM,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;EAC1B,MAAM,MAAM,KAAK,CAAC,0BAA0B,CAAC,CAAC;EAC9C,KAAK;AACL;EACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACnD,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACpD,QAAQ,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EAChC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,SAAS;EAC7C,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;EAC3B,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;EACzD,OAAO;AACP;EACA,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EACrD,QAAQ,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;EACjC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,SAAS;EAC7C,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;EAC3B,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;EACxD,OAAO;EACP,KAAK;EACL,GAAG;AACH;EACA,EAAE,OAAO,IAAI,CAAC;EACd,CAAC;AACD;EACA,SAAS,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;EAC1C,EAAE,IAAI,CAAC,KAAK,EAAE;EACd,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EAChC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;EAClC,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EAChC,IAAI,MAAM,KAAK,CAAC,UAAU,CAAC,CAAC;EAC5B,GAAG;EACH,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;EAC9B,EAAE,IAAI,UAAU,GAAG,OAAO;EAC1B,KAAK,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EACvB,KAAK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EACxB,KAAK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EACxB,KAAK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EACxB,KAAK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EACxB,KAAK,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EACxB,KAAK,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EACvB,KAAK,KAAK,CAAC,GAAG,CAAC;EACf,KAAK,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACvC;EACA,EAAE,IAAI,oBAAoB,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;EAC1E,EAAE,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AAC9C;EACA,EAAE,OAAO;EACT,IAAI,MAAM,EAAE,MAAM,CAAC,IAAI;EACvB,IAAI,QAAQ,EAAE,MAAM,CAAC,QAAQ;EAC7B,IAAI,KAAK,EAAE,KAAK;EAChB,IAAI,aAAa,EAAE,EAAE,IAAI,MAAM,CAAC,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC;EACtE,IAAI,eAAe,EAAE,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,WAAW;EACjE,IAAI,KAAK,EAAE,KAAK,CAAC,KAAK;EACtB,IAAI,SAAS,EAAE,KAAK,CAAC,SAAS;EAC9B,IAAI,WAAW,EAAE,KAAK,CAAC,WAAW;EAClC,IAAI,WAAW,EAAE,KAAK,CAAC,WAAW;EAClC,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE;EAChB,IAAI,GAAG,EAAE,KAAK,CAAC,GAAG;EAClB,IAAI,OAAO,EAAE,OAAO;EACpB,IAAI,UAAU,EAAE,UAAU;EAC1B,IAAI,oBAAoB,EAAE,oBAAoB;EAC9C,IAAI,KAAK,EAAE,KAAK;EAChB,GAAG,CAAC;EACJ;;ACzEY,QAAC,YAAY,GAAG;EAC5B,EAAE,SAAS,EAAE,gBAAgB;EAC7B,EAAE,UAAU,EAAE,kBAAkB;EAChC,EAAE,KAAK,EAAE,OAAO;EAChB,EAAE;AACF;AACY,QAAC,YAAY,GAAG;EAC5B,EAAE,MAAM,EAAE,QAAQ;EAClB,EAAE,kBAAkB,EAAE,sBAAsB;EAC5C,EAAE,sBAAsB,EAAE,0BAA0B;EACpD,EAAE,KAAK,EAAE,OAAO;EAChB,EAAE,iBAAiB,EAAE,qBAAqB;EAC1C,EAAE,qBAAqB,EAAE,yBAAyB;EAClD,EAAE;AACF;EACA,SAAS,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE;EAC/B,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC;EAChB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,OAAO,EAAE,KAAK,EAAE,CAAC;EAC1E,EAAE,OAAO,KAAK,CAAC;EACf,CAAC;AACD;EACO,SAAS,cAAc;EAC9B,EAAE,MAAM;EACR,EAAE,KAAK;EACP,EAAE,WAAW;EACb,EAAE,WAAW;EACb,EAAE,SAAS;EACX,EAAE,QAAQ;EACV,EAAE;EACF,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;EAC7B,EAAgB,MAAM,CAAC,QAAQ;EAC/B,EAAE,WAAW,GAAG,WAAW,IAAI,YAAY,CAAC,UAAU,CAAC;EACvD,EAAE,WAAW,GAAG,WAAW,IAAI,YAAY,CAAC,MAAM,CAAC;AACnD;EACA,EAAE,SAAS,UAAU,CAAC,QAAQ,EAAE;EAChC,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;EACnC,GAAG;AACH;EACA,EAAE,SAAS,aAAa,CAAC,IAAI,EAAE;EAC/B,IAAI,QAAQ,WAAW;EACvB,MAAM,KAAK,YAAY,CAAC,SAAS;EACjC,QAAQ,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpE,MAAM,KAAK,YAAY,CAAC,UAAU;EAClC,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;EACvC,QAAQ,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/E,MAAM,KAAK,YAAY,CAAC,KAAK;EAC7B,QAAQ,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC;EACjC,UAAU,OAAO,CAAC;EAClB,QAAQ,OAAO,UAAU,CAAC,CAAC,CAAC,KAAK;EACjC,UAAU,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;EACxC,UAAU,OAAO,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;EAC/C,SAAS,CAAC,CAAC;EACX,MAAM;EACN,QAAQ,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,WAAW,CAAC,CAAC;EAC/D,KAAK;EACL,GAAG;AACH;EACA,EAAE,SAAS,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE;EAC/B,IAAI,IAAI,IAAI,GAAG,EAAE;EACjB,MAAM,KAAK,GAAG,CAAC,CAAC;EAChB,IAAI,KAAK,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC1D,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;EACpB,MAAM,IAAI,CAAC,CAAC,EAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;EACrD,MAAM,IAAI,CAAC,CAAC,CAAC,aAAa,EAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC;EACvE,MAAM,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;AACnE;EACA,MAAM,QAAQ,WAAW;EACzB,QAAQ,KAAK,YAAY,CAAC,MAAM;EAChC,UAAU,KAAK,GAAG,CAAC,CAAC;EACpB,UAAU,MAAM;EAChB,QAAQ,KAAK,YAAY,CAAC,KAAK;EAC/B,UAAU,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;EAC7C,UAAU,MAAM;EAChB,QAAQ,KAAK,YAAY,CAAC,kBAAkB;EAC5C,UAAU,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;EAC9D,UAAU,MAAM;EAChB,QAAQ,KAAK,YAAY,CAAC,sBAAsB;EAChD,UAAU,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;EACpE,UAAU,MAAM;EAChB,QAAQ,KAAK,YAAY,CAAC,iBAAiB;EAC3C,UAAU,KAAK;EACf,YAAY,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;EAChF,UAAU,MAAM;EAChB,QAAQ,KAAK,YAAY,CAAC,qBAAqB;EAC/C,UAAU,KAAK;EACf,YAAY,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC;EACtC,YAAY,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;EACzD,UAAU,MAAM;EAChB,QAAQ;EACR,UAAU,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,WAAW,CAAC,CAAC;EACjE,OAAO;AACP;EACA,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI;EAC3B,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,aAAa;EACzE,OAAO,CAAC;AACR;EACA,MAAM,IAAI,SAAS,EAAE;EACrB,QAAQ,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC;EACjC,OAAO,MAAM;EACb,QAAQ,IAAI,CAAC,IAAI,CAAC;EAClB,UAAU,IAAI,EAAE,CAAC,CAAC,WAAW;EAC7B,UAAU,QAAQ,EAAE,CAAC,CAAC,aAAa;EACnC,UAAU,KAAK,EAAE,KAAK;EACtB,SAAS,CAAC,CAAC;EACX,OAAO;EACP,KAAK;AACL;EACA,IAAI,OAAO,IAAI,CAAC;EAChB,GAAG;AACH;EACA,EAAE,SAAS,WAAW,CAAC,KAAK,EAAE;EAC9B,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;EACvD,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;AACtB;EACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAC5C,MAAM,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,IAAI,MAAM,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;EACxC,MAAM,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;EACzE,KAAK;AACL;EACA,IAAI,OAAO,QAAQ,CAAC;EACpB,GAAG;AACH;EACA,EAAE,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;EAC7D,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAClE;EACA,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;EAC1B,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,SAAS,IAAI,CAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC;EAC7E,GAAG,CAAC,CAAC;AACL;EACA,EAAE,OAAO,QAAQ,CAAC;EAClB;;EC/HA,SAAS,QAAQ,CAAC,KAAK,EAAE;EACzB,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;EACpC,CAAC;AACD;EACA,SAAS,OAAO,GAAG;EACnB,EAAE,OAAO,OAAO,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC;EACzE,CAAC;AACD;EACO,MAAM,MAAM,CAAC;EACpB,EAAE,WAAW,CAAC,IAAI,EAAE;EACpB,IAAI,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;EACtC,IAAI,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;EACpC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;EAC9D,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AAC5D;EACA,IAAI,IAAI,EAAE,GAAG,OAAO,EAAE,CAAC;AACvB;EACA,IAAI,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,MAAM;EAClC,MAAM,IAAI,CAAC,MAAM;EACjB,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM;EACrB,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW;EAC1B,KAAK,CAAC;AACN;EACA,IAAI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,MAAM;EACjC,MAAM,IAAI,CAAC,MAAM;EACjB,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;EAClD,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW;EAC1B,KAAK,CAAC;AACN;EACA,IAAI,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,MAAM;EACtC,MAAM,IAAI,CAAC,MAAM;EACjB,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM;EACrB,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa;EAC5B,KAAK,CAAC;AACN;EACA,IAAI,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,MAAM;EACrC,MAAM,IAAI,CAAC,MAAM;EACjB,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;EAClD,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa;EAC5B,KAAK,CAAC;EACN,GAAG;AACH;EACA,EAAE,KAAK,GAAG;EACV,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;EACjD,GAAG;AACH;EACA,EAAE,SAAS,GAAG;EACd,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC;EACrD,GAAG;AACH;EACA,EAAE,aAAa,GAAG;EAClB,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;EAChE,GAAG;AACH;EACA,EAAE,0BAA0B,CAAC,SAAS,EAAE,KAAK,EAAE;EAC/C,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM;EAC7B,MAAM,CAAC,CAAC;EACR,QAAQ,SAAS,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC;EAChD,QAAQ,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC;EACrC,KAAK,CAAC;EACN,GAAG;AACH;EACA,EAAE,kBAAkB,CAAC,SAAS,EAAE;EAChC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;EAC/E,GAAG;AACH;EACA,EAAE,cAAc,CAAC,KAAK,EAAE;EACxB,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;EACpE,GAAG;AACH;EACA,EAAE,mBAAmB,CAAC,SAAS,EAAE;EACjC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;EAChF,GAAG;AACH;EACA,EAAE,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE;EAClE,IAAI,OAAO,cAAc;EACzB,MAAM,IAAI;EACV,MAAM,WAAW;EACjB,MAAM,WAAW;EACjB,MAAM,QAAQ;EACd,MAAM,SAAS;EACf,MAAM,QAAQ;EACd,KAAK,CAAC;EACN,GAAG;EACH;;ECxFO,SAAS,iBAAiB,CAAC,OAAO,EAAE;EAC3C,EAAE,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK;EAC5B,IAAI,OAAO;EACX,MAAM,KAAK,EAAE,CAAC,CAAC,IAAI;EACnB,MAAM,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK;EACrC,QAAQ,OAAO;EACf,UAAU,QAAQ,EAAE,CAAC,CAAC,aAAa;EACnC,UAAU,IAAI,EAAE,CAAC,CAAC,WAAW;EAC7B,UAAU,KAAK,EAAE,CAAC;EAClB,SAAS,CAAC;EACV,OAAO,CAAC;EACR,KAAK,CAAC;EACN,GAAG,CAAC,CAAC;EACL;;;;;;;;;;;;;;;"}