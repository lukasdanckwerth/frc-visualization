{"version":3,"file":"frc.js","sources":["../../../src/parse.artists.js","../../../src/parse.tacks.js","../../../src/corpus.search.js","../../../node_modules/internmap/src/index.js","../../../node_modules/d3-array/src/identity.js","../../../node_modules/d3-array/src/group.js","../../../node_modules/d3-array/src/sum.js","../../../node_modules/d3-dispatch/src/dispatch.js","../../../node_modules/d3-transition/src/transition/schedule.js","../../../src/corpus.js","../../../src/fetch.js","../../../src/artists.to.data.js"],"sourcesContent":["/**\n * Returns an array containing all artists who got at least one\n * track from the passed `Corpus.json`.\n *\n * @param {*} json The corpus.json\n * @returns {Array<artist>} An array containing all artists\n */\nexport function parseArtists(json) {\n    console.log(`[FRC] Parse artists`);\n    let artists = [],\n        artist;\n\n    for (let i = 0; i < json.length; i++) {\n        artist = json[i];\n\n        Object.assign(artist, {\n            allTracks: function () {\n                let tracks = this.tracks.map((t) => t);\n                this.albums.forEach((album) => tracks.push(...album.tracks));\n                return tracks;\n            },\n            hasTracks: function () {\n                return this.allTracks().length > 0;\n            },\n        });\n\n        artist.departementNo =\n            \"\" + (artist.departementNo || artist.departementNo);\n\n        artist.departementName = artist.departementName || artist.departement;\n\n        if (artist.hasTracks()) artists.push(artist);\n    }\n\n    return artists;\n}\n","/**\n * Parses a flat version of the given track including information\n * from the passed artist and album (the latter if existing).\n * @param {*} track\n * @param {*} artist\n * @param {*} album\n * @returns\n */\nfunction parseTrack(track, artist, album) {\n    if (!track) {\n        console.log(\"track\", track);\n        console.log(\"artist\", artist);\n        console.log(\"album\", album);\n        throw Error(\"no track\");\n    }\n    let content = track.content,\n        tokens = content\n            .replace(/,/g, \" \")\n            .replace(/\\./g, \" \")\n            .replace(/\\n/g, \" \")\n            .replace(/\\(/g, \" \")\n            .replace(/\\)/g, \" \")\n            .replace(/\\[/g, \" \")\n            .replace(/]/g, \" \")\n            .replace(/\\?/g, \" \")\n            .replace(/\\!/g, \" \")\n            .split(\" \")\n            .filter((word) => word.length > 0),\n        tokensLower = tokens.map((item) => item.toLowerCase()),\n        types = Array.from(new Set(tokens));\n\n    return {\n        artist: artist.name,\n        artistID: artist.geniusId,\n        sex: artist.sex || artist.group,\n        album: album,\n        departementNo: \"\" + (artist.departementNo || artist.departementNo),\n        departementName: artist.departementName || artist.departement,\n        title: track.title,\n        fullTitle: track.fullTitle,\n        releaseDate: track.releaseDate,\n        releaseYear: track.releaseYear,\n        id: track.id,\n        url: track.url,\n        content: content,\n        tokens: tokens,\n        tokensLower: tokensLower,\n        types: types,\n    };\n}\n\nexport function parseTracks(json) {\n    console.log(`[FRC] Parse tracks`);\n    let data = [],\n        ids = [];\n    let artist, album, track, entry;\n    for (let i = 0; i < json.length; i++) {\n        artist = json[i];\n\n        if (!(artist.departementName || artist.departement)) {\n            console.log(artist);\n            throw Error(\"missing departement name\");\n        }\n\n        for (let i = 0; i < artist.albums.length; i++) {\n            album = artist.albums[i];\n            for (let j = 0; j < album.tracks.length; j++) {\n                track = album.tracks[j];\n                if (ids.includes(track.id)) continue;\n                ids.push(track.id);\n                data.push(parseTrack(track, artist, album.name));\n            }\n\n            for (let i = 0; i < artist.tracks.length; i++) {\n                track = artist.tracks[i];\n                if (ids.includes(track.id)) continue;\n                ids.push(track.id);\n                data.push(parseTrack(track, artist, undefined));\n            }\n        }\n    }\n\n    return data;\n}\n","export const SearchType = Object.freeze({\n    sensitive: \"case-sensitive\",\n    insensitve: \"case-insensitive\",\n    regex: \"regex\",\n});\n\nexport const SearchCountType = Object.freeze({\n    tracks: \"tracks\",\n    tracksRelativeDate: \"tracks-relative-date\",\n    tracksRelativeLocation: \"tracks-relative-location\",\n    words: \"words\",\n    wordsRelativeDate: \"words-relative-date\",\n    wordsRelativeLocation: \"words-relative-location\",\n});\n\nfunction count(array, element) {\n    let count = 0;\n    for (let i = 0; i < array.length; i++) if (array[i] == element) count++;\n    return count;\n}\n\nvar _emptyData = null;\n\nexport function internalSearch(\n    corpus,\n    query,\n    searchType,\n    searchCountType,\n    firstYear,\n    lastYear\n) {\n    console.time(\"search: \" + query);\n\n    let tracks = corpus.tracks;\n    let artists = corpus.artists;\n    searchType = searchType || SearchType.insensitve;\n    searchCountType = searchCountType || SearchCountType.tracks;\n\n    function tracksForWord(word) {\n        switch (searchType) {\n            case SearchType.sensitive:\n                return tracks.filter((t) => t.tokens.indexOf(word) !== -1);\n            case SearchType.insensitve:\n                let lower = word.toLowerCase();\n                return tracks.filter(\n                    (t) => t.tokensLower.indexOf(lower) !== -1\n                );\n            case SearchType.regex:\n                let re = new RegExp(word),\n                    results;\n                return tracks.filter((t) => {\n                    results = t.content.match(re);\n                    return results && results.length > 0;\n                });\n            default:\n                throw new Error(\"unknown search count type: \" + searchType);\n        }\n    }\n\n    function emptyData(word) {\n        let dates = corpus.dates();\n        let locations = corpus.locations();\n        let data = dates.map((date) => {\n            return {\n                label: word,\n                date: date,\n                location: locations[0],\n                group: null,\n                value: 0,\n            };\n        });\n\n        return data.concat(\n            locations.map((location) => {\n                return {\n                    labeL: word,\n                    date: firstYear,\n                    location: location,\n                    group: null,\n                    value: 0,\n                };\n            })\n        );\n    }\n\n    function data(tracks, word) {\n        let data = emptyData(word),\n            value = 0;\n        for (let t, candidate, i = 0; i < tracks.length; i++) {\n            t = tracks[i];\n            if (!t) throw new Error(\"track invalid: \" + i);\n            if (!t.departementNo) throw new Error(\"no departement no: \" + i);\n            if (!t.releaseYear) throw new Error(\"no release year: \" + i);\n\n            switch (searchCountType) {\n                case SearchCountType.tracks:\n                    value = 1;\n                    break;\n                case SearchCountType.words:\n                    value = count(t.tokens, word);\n                    break;\n                case SearchCountType.tracksRelativeDate:\n                    value = 1 / corpus.datesToTracks.get(t.releaseYear);\n                    break;\n                case SearchCountType.tracksRelativeLocation:\n                    value = 1 / corpus.locationsToTracks.get(t.departementNo);\n                    break;\n                case SearchCountType.wordsRelativeDate:\n                    value =\n                        count(t.tokens, word) /\n                        corpus.datesToTokens.get(t.releaseYear);\n                    break;\n                case SearchCountType.wordsRelativeLocation:\n                    value =\n                        count(t.tokens, word) /\n                        corpus.locationsToTokens.get(t.departementNo);\n                    break;\n                default:\n                    throw new Error(\"unknown search type: \" + searchCountType);\n            }\n\n            candidate = data.find(\n                (d) =>\n                    d.date === t.releaseYear && d.location === t.departementNo\n            );\n\n            if (candidate) {\n                candidate.value += value;\n            } else {\n                data.push({\n                    date: t.releaseYear,\n                    location: t.departementNo,\n                    value: value,\n                });\n            }\n        }\n\n        return data;\n    }\n\n    function searchGroup(group) {\n        let words = group.split(\",\").map((l) => l.trim()),\n            datasets = [],\n            groupFormatted =\n                words.length < 2\n                    ? words[0]\n                    : words[0] + \" (+\" + (words.length - 1) + \")\";\n\n        for (let i = 0; i < words.length; i++) {\n            let word = words[i],\n                tracks = tracksForWord(word);\n            datasets.push({\n                label: word,\n                group: groupFormatted,\n                data: data(tracks, word),\n                tracks,\n            });\n        }\n\n        return datasets;\n    }\n\n    let groups = query.split(\";\").map((value) => value.trim());\n    let datasets = groups.map((group) => searchGroup(group)).flat();\n\n    datasets.forEach((d) => {\n        d.data = d.data.filter(\n            (d) => d.date >= firstYear && d.date <= lastYear\n        );\n    });\n\n    console.timeEnd(\"search: \" + query);\n\n    return datasets;\n}\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(value);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n","export default function(x) {\n  return x;\n}\n","import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import { parseArtists } from \"./parse.artists.js\";\nimport { parseTracks } from \"./parse.tacks.js\";\nimport { internalSearch } from \"./corpus.search\";\nimport * as d3 from \"d3\";\n\nexport class Corpus {\n    constructor(json) {\n        this.artists = parseArtists(json);\n        this.tracks = parseTracks(json);\n\n        console.log(`[FRC] Found ${this.artists.length} artists`);\n        console.log(`[FRC] Found ${this.tracks.length} tracks`);\n\n        this.datesToTracks = d3.rollup(\n            this.tracks,\n            (v) => v.length,\n            (d) => d.releaseYear\n        );\n\n        this.datesToTokens = d3.rollup(\n            this.tracks,\n            (v) => d3.sum(v, (d) => d.tokens.length),\n            (d) => d.releaseYear\n        );\n\n        this.locationsToTracks = d3.rollup(\n            this.tracks,\n            (v) => v.length,\n            (d) => d.departementNo\n        );\n\n        this.locationsToTokens = d3.rollup(\n            this.tracks,\n            (v) => d3.sum(v, (d) => d.tokens.length),\n            (d) => d.departementNo\n        );\n    }\n\n    dates() {\n        return Array.from(this.datesToTracks.keys());\n    }\n\n    locations() {\n        return Array.from(this.locationsToTracks.keys());\n    }\n\n    locationNames() {\n        return Array.from(new Set(this.artists.map((a) => a.departementName)));\n    }\n\n    tracksForLocationsAndDates(locations, dates) {\n        return this.tracks.filter(\n            (t) =>\n                locations.includes(\"\" + t.departementNo) &&\n                dates.includes(t.releaseYear)\n        );\n    }\n\n    tracksForLocations(ls) {\n        return this.tracks.filter((t) => ls.includes(\"\" + t.departementNo));\n    }\n\n    tracksForDates(dates) {\n        return this.tracks.filter((t) => dates.includes(t.releaseYear));\n    }\n\n    artistsForLocations(ls) {\n        return this.artists.filter((a) => ls.includes(\"\" + a.departementNo));\n    }\n\n    search(query, firstYear, lastYear, searchType, searchCountType) {\n        return internalSearch(\n            this,\n            query,\n            searchType,\n            searchCountType,\n            firstYear,\n            lastYear\n        );\n    }\n}\n","import { Corpus } from \".\";\n\nexport function fetchCorpus(progress, url) {\n    return new Promise(function (resolve, reject) {\n        if (typeof progress !== \"function\") progress = function () {};\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url || \"./assets/corpus.json\");\n\n        xhr.onprogress = function (event) {\n            progress(event.loaded, event.total);\n        };\n\n        xhr.onload = function (event) {\n            progress(event.total, event.total);\n\n            if (xhr.status != 200) {\n                reject(`Error ${xhr.status}: ${xhr.statusText}`);\n            } else {\n                resolve(new Corpus(JSON.parse(xhr.response)));\n            }\n        };\n\n        xhr.send();\n    });\n}\n","export function artistsToDatasets(artists) {\n    return artists.map((a) => {\n        return {\n            label: a.name,\n            data: a.allTracks().map((t) => {\n                return {\n                    location: a.departementNo,\n                    date: t.releaseYear,\n                    value: 1,\n                };\n            }),\n        };\n    });\n}\n"],"names":["d3.rollup","d3.sum"],"mappings":"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"}