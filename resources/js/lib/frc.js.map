{"version":3,"file":"frc.js","sources":["../../../src/parse.artists.js","../../../src/parse.tacks.js","../../../src/corpus.search.js","../../../node_modules/internmap/src/index.js","../../../node_modules/d3-array/src/identity.js","../../../node_modules/d3-array/src/group.js","../../../node_modules/d3-array/src/sum.js","../../../node_modules/d3-zoom/src/transform.js","../../../src/corpus.js","../../../src/fetch.js","../../../src/artists.to.data.js"],"sourcesContent":["/**\n * Returns an array containing all artists who got at least one\n * track from the passed `Corpus.json`.\n *\n * @param {*} json The corpus.json\n * @returns {Array<artist>} An array containing all artists\n */\nexport function parseArtists(json) {\n  console.log(`[FRC] Parse artists`);\n  let artists = [],\n    artist;\n\n  for (let i = 0; i < json.length; i++) {\n    artist = json[i];\n\n    Object.assign(artist, {\n      allTracks: function () {\n        let tracks = this.tracks.map((t) => t);\n        this.albums.forEach((album) => tracks.push(...album.tracks));\n        return tracks;\n      },\n      hasTracks: function () {\n        return this.allTracks().length > 0;\n      },\n    });\n\n    artist.departementNo = \"\" + (artist.departementNo || artist.departementNo);\n\n    artist.departementName = artist.departementName || artist.departement;\n\n    if (artist.hasTracks()) artists.push(artist);\n  }\n\n  return artists;\n}\n","/**\n * Parses a flat version of the given track including information\n * from the passed artist and album (the latter if existing).\n * @param {*} track\n * @param {*} artist\n * @param {*} album\n * @returns\n */\nfunction parseTrack(track, artist, album) {\n  if (!track) {\n    console.log(\"track\", track);\n    console.log(\"artist\", artist);\n    console.log(\"album\", album);\n    throw Error(\"no track\");\n  }\n  let content = track.content,\n    tokens = content\n      .replace(/,/g, \" \")\n      .replace(/\\./g, \" \")\n      .replace(/\\n/g, \" \")\n      .replace(/\\(/g, \" \")\n      .replace(/\\)/g, \" \")\n      .replace(/\\[/g, \" \")\n      .replace(/]/g, \" \")\n      .replace(/\\?/g, \" \")\n      .replace(/\\!/g, \" \")\n      .replace(/\\bs'/gi, \"\")\n      .replace(/\\bm'/gi, \"\")\n      .replace(/\\bt'/gi, \"\")\n      .replace(/\\bd'/gi, \"\")\n      .replace(/\\bj'/gi, \"\")\n      .replace(/\\br'/gi, \"\")\n      .replace(/\\bl'/gi, \"\")\n      .replace(/\\bn'/gi, \"\")\n      .split(\" \")\n      .filter((word) => word.length > 0),\n    tokensLower = tokens.map((item) => item.toLowerCase()),\n    types = Array.from(new Set(tokens));\n\n  return {\n    artist: artist.name,\n    artistID: artist.geniusId,\n    sex: artist.sex || artist.group,\n    album: album,\n    departementNo: \"\" + (artist.departementNo || artist.departementNo),\n    departementName: artist.departementName || artist.departement,\n    title: track.title,\n    fullTitle: track.fullTitle,\n    releaseDate: track.releaseDate,\n    releaseYear: track.releaseYear,\n    id: track.id,\n    url: track.url,\n    content: content,\n    tokens: tokens,\n    tokensLower: tokensLower,\n    types: types,\n  };\n}\n\nexport function parseTracks(json) {\n  console.log(`[FRC] Parse tracks`);\n  let data = [],\n    ids = [],\n    artist,\n    album,\n    track,\n    entry;\n\n  for (let i = 0; i < json.length; i++) {\n    artist = json[i];\n\n    if (!(artist.departementName || artist.departement)) {\n      console.log(artist);\n      throw Error(\"missing departement name\");\n    }\n\n    for (let i = 0; i < artist.albums.length; i++) {\n      album = artist.albums[i];\n\n      for (let j = 0; j < album.tracks.length; j++) {\n        track = album.tracks[j];\n        // if (ids.includes(track.id)) continue;\n        ids.push(track.id);\n        data.push(parseTrack(track, artist, album.name));\n      }\n    }\n\n    for (let i = 0; i < artist.tracks.length; i++) {\n      track = artist.tracks[i];\n      // if (ids.includes(track.id)) continue;\n      ids.push(track.id);\n      data.push(parseTrack(track, artist, undefined));\n    }\n  }\n\n  return data;\n}\n","export const SearchType = Object.freeze({\n  sensitive: \"case-sensitive\",\n  insensitive: \"case-insensitive\",\n  regex: \"regex\",\n});\n\nexport const SearchCountType = Object.freeze({\n  tracks: \"tracks\",\n  tracksRelativeDate: \"tracks-relative-date\",\n  tracksRelativeLocation: \"tracks-relative-location\",\n  words: \"words\",\n  wordsRelativeDate: \"words-relative-date\",\n  wordsRelativeLocation: \"words-relative-location\",\n});\n\nfunction count(array, element) {\n  let count = 0;\n  for (let i = 0; i < array.length; i++) if (array[i] == element) count++;\n  return count;\n}\n\nvar _emptyData = null;\n\nexport function internalSearch(\n  corpus,\n  query,\n  searchType,\n  searchCountType,\n  firstYear,\n  lastYear\n) {\n  console.time(\"search: \" + query);\n\n  let tracks = corpus.tracks;\n  let artists = corpus.artists;\n  sensitivity = sensitivity || SearchType.insensitive;\n  searchType = searchType || SearchCountType.tracks;\n\n  function findTracks(accessor) {\n    return tracks.filter(accessor);\n  }\n\n  function tracksForWord(word) {\n    switch (searchType) {\n      case SearchType.sensitive:\n        return findTracks((t) => t.tokens.indexOf(word) !== -1);\n      case SearchType.insensitive:\n        let lower = word.toLowerCase();\n        return tracks.filter((t) => t.tokensLower.indexOf(lower) !== -1);\n      case SearchType.regex:\n        let re = new RegExp(word),\n          results;\n        return tracks.filter((t) => {\n          results = t.content.match(re);\n          return results && results.length > 0;\n        });\n      default:\n        throw new Error(\"unknown search count type: \" + searchType);\n    }\n  }\n\n  function emptyData(word) {\n    let dates = corpus.dates();\n    let locations = corpus.locations();\n    let data = dates.map((date) => {\n      return {\n        label: word,\n        date: date,\n        location: locations[0],\n        group: null,\n        value: 0,\n      };\n    });\n\n    return data.concat(\n      locations.map((location) => {\n        return {\n          labeL: word,\n          date: firstYear,\n          location: location,\n          group: null,\n          value: 0,\n        };\n      })\n    );\n  }\n\n  function data(tracks, word) {\n    let data = emptyData(word),\n      value = 0;\n    for (let t, candidate, i = 0; i < tracks.length; i++) {\n      t = tracks[i];\n      if (!t) throw new Error(\"track invalid: \" + i);\n      if (!t.departementNo) throw new Error(\"no departement no: \" + i);\n      if (!t.releaseYear) throw new Error(\"no release year: \" + i);\n\n      switch (searchCountType) {\n        case SearchCountType.tracks:\n          value = 1;\n          break;\n        case SearchCountType.words:\n          value = count(t.tokens, word);\n          break;\n        case SearchCountType.tracksRelativeDate:\n          value = 1 / corpus.datesToTracks.get(t.releaseYear);\n          break;\n        case SearchCountType.tracksRelativeLocation:\n          value = 1 / corpus.locationsToTracks.get(t.departementNo);\n          break;\n        case SearchCountType.wordsRelativeDate:\n          value =\n            count(t.tokens, word) / corpus.datesToTokens.get(t.releaseYear);\n          break;\n        case SearchCountType.wordsRelativeLocation:\n          value =\n            count(t.tokens, word) /\n            corpus.locationsToTokens.get(t.departementNo);\n          break;\n        default:\n          throw new Error(\"unknown search type: \" + searchCountType);\n      }\n\n      candidate = data.find(\n        (d) => d.date === t.releaseYear && d.location === t.departementNo\n      );\n\n      if (candidate) {\n        candidate.value += value;\n      } else {\n        data.push({\n          date: t.releaseYear,\n          location: t.departementNo,\n          value: value,\n        });\n      }\n    }\n\n    return data;\n  }\n\n  function searchGroup(group) {\n    if (searchType == SearchType.regex) {\n      let word = group;\n      let tracks = tracksForWord(word);\n      return {\n        label: word,\n        group: word,\n        data: data(tracks, word),\n        tracks,\n      };\n    } else {\n      let words = group.split(\",\").map((l) => l.trim()),\n        datasets = [],\n        groupFormatted =\n          words.length < 2\n            ? words[0]\n            : words[0] + \" (+\" + (words.length - 1) + \")\";\n\n      for (let i = 0; i < words.length; i++) {\n        let word = words[i],\n          tracks = tracksForWord(word);\n        datasets.push({\n          label: word,\n          group: groupFormatted,\n          data: data(tracks, word),\n          tracks,\n        });\n      }\n\n      return datasets;\n    }\n  }\n\n  let groups = [];\n  if (searchType == SearchType.regex) {\n    groups = [query.trim()];\n  } else {\n    groups = query.split(\";\").map((value) => value.trim());\n  }\n\n  let datasets = groups.map((group) => searchGroup(group)).flat();\n\n  datasets.forEach((d) => {\n    d.data = d.data.filter((d) => d.date >= firstYear && d.date <= lastYear);\n  });\n\n  console.timeEnd(\"search: \" + query);\n\n  return datasets;\n}\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n","export default function identity(x) {\n  return x;\n}\n","import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction flatten(groups, keys) {\n  for (let i = 1, n = keys.length; i < n; ++i) {\n    groups = groups.flatMap(g => g.pop().map(([key, value]) => [...g, key, value]));\n  }\n  return groups;\n}\n\nexport function flatGroup(values, ...keys) {\n  return flatten(groups(values, ...keys), keys);\n}\n\nexport function flatRollup(values, reduce, ...keys) {\n  return flatten(rollups(values, reduce, ...keys), keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import { parseArtists } from \"./parse.artists.js\";\nimport { parseTracks } from \"./parse.tacks.js\";\nimport { internalSearch } from \"./corpus.search\";\nimport * as d3 from \"d3\";\n\nexport class Corpus {\n  constructor(json) {\n    this.artists = parseArtists(json);\n    this.tracks = parseTracks(json);\n\n    console.log(`[FRC] Found ${this.artists.length} artists`);\n    console.log(`[FRC] Found ${this.tracks.length} tracks`);\n\n    this.datesToTracks = d3.rollup(\n      this.tracks,\n      (v) => v.length,\n      (d) => d.releaseYear\n    );\n\n    this.datesToTokens = d3.rollup(\n      this.tracks,\n      (v) => d3.sum(v, (d) => d.tokens.length),\n      (d) => d.releaseYear\n    );\n\n    this.locationsToTracks = d3.rollup(\n      this.tracks,\n      (v) => v.length,\n      (d) => d.departementNo\n    );\n\n    this.locationsToTokens = d3.rollup(\n      this.tracks,\n      (v) => d3.sum(v, (d) => d.tokens.length),\n      (d) => d.departementNo\n    );\n  }\n\n  dates() {\n    return Array.from(this.datesToTracks.keys());\n  }\n\n  locations() {\n    return Array.from(this.locationsToTracks.keys());\n  }\n\n  locationNames() {\n    return Array.from(new Set(this.artists.map((a) => a.departementName)));\n  }\n\n  tracksForLocationsAndDates(locations, dates) {\n    return this.tracks.filter(\n      (t) =>\n        locations.includes(\"\" + t.departementNo) &&\n        dates.includes(t.releaseYear)\n    );\n  }\n\n  tracksForLocations(ls) {\n    return this.tracks.filter((t) => ls.includes(\"\" + t.departementNo));\n  }\n\n  tracksForDates(dates) {\n    return this.tracks.filter((t) => dates.includes(t.releaseYear));\n  }\n\n  artistsForLocations(ls) {\n    return this.artists.filter((a) => ls.includes(\"\" + a.departementNo));\n  }\n\n  search(query, firstYear, lastYear, searchType, searchCountType) {\n    return internalSearch(\n      this,\n      query,\n      searchType,\n      searchCountType,\n      firstYear,\n      lastYear\n    );\n  }\n}\n","import { Corpus } from \".\";\n\nexport function fetchCorpus(progress, url) {\n  return new Promise(function (resolve, reject) {\n    if (typeof progress !== \"function\") progress = function () {};\n\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url || \"./assets/corpus.json\");\n\n    xhr.onprogress = function (event) {\n      progress(event.loaded, event.total);\n    };\n\n    xhr.onload = function (event) {\n      progress(event.total, event.total);\n\n      if (xhr.status != 200) {\n        reject(`Error ${xhr.status}: ${xhr.statusText}`);\n      } else {\n        resolve(new Corpus(JSON.parse(xhr.response)));\n      }\n    };\n\n    xhr.send();\n  });\n}\n","export function artistsToDatasets(artists) {\n  return artists.map((a) => {\n    return {\n      label: a.name,\n      data: a.allTracks().map((t) => {\n        return {\n          location: a.departementNo,\n          date: t.releaseYear,\n          value: 1,\n        };\n      }),\n    };\n  });\n}\n"],"names":["d3.rollup","d3.sum"],"mappings":"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"}